import Watchable from '../watchable';
/**
 * Abstract superclass for all models. You won't use this class directly.
 *
 * @docsPath models/advanced/AbstractModel
 */
declare class AbstractModel<DataType, WatchableKey extends string> extends Watchable<WatchableKey> {
    /**
     * The ID for this model.
     */
    get id(): string;
    /**
     * `true` if the model has been deleted, and `false` otherwise.
     *
     * In general, it's best to avoid keeping a reference to an object past the
     * current event loop, since it may be deleted and trying to access any data
     * of a deleted object (other than its ID) will throw. But if you keep a
     * reference, you can use `isDeleted` to check that it's safe to access the
     * model's data.
     */
    get isDeleted(): boolean;
    /**
     * A string representation of the model for use in debugging.
     */
    toString(): string;
}
export default AbstractModel;
//# sourceMappingURL=abstract_model.d.ts.map