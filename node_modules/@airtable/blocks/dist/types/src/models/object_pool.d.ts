interface ObjectPoolOptions<T, Opts> {
    getKeyFromObject: (arg1: T) => string;
    getKeyFromObjectOptions: (arg1: Opts) => string;
    canObjectBeReusedForOptions: (arg1: T, arg2: Opts) => boolean;
}
declare class ObjectPool<T, Opts> {
    /** @hidden */
    constructor(config: ObjectPoolOptions<T, Opts>);
    /** @hidden */
    registerObjectForReuseStrong(object: T): void;
    /** @hidden */
    unregisterObjectForReuseStrong(object: T): void;
    /** @hidden */
    registerObjectForReuseWeak(object: T): void;
    /** @hidden */
    unregisterObjectForReuseWeak(object: T): void;
    /** @hidden */
    getObjectForReuse(objectOptions: Opts): T | null;
}
export default ObjectPool;
//# sourceMappingURL=object_pool.d.ts.map