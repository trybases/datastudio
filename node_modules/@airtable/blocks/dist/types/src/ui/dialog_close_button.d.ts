/** @module @airtable/blocks/ui: Dialog */ /** */
import PropTypes from 'prop-types';
import * as React from 'react';
import { BorderRadiusProps, DimensionsSetProps, DisplayProps, FlexContainerSetProps, FlexItemSetProps, PositionSetProps, SpacingSetProps } from './system';
import { TooltipAnchorProps } from './types/tooltip_anchor_props';
/**
 * Props for the {@link DialogCloseButton} component. Also accepts:
 * * {@link DialogCloseButtonStyleProps}
 *
 * @noInheritDoc
 */
export interface DialogCloseButtonProps extends TooltipAnchorProps<HTMLDivElement> {
    /** `className`s to apply to the close button, separated by spaces. */
    className?: string;
    /** Styles to apply to the close button. */
    style?: React.CSSProperties;
    /** Indicates if the button can be focused and if/where it participates in sequential keyboard navigation. */
    tabIndex?: number;
    /** The contents of the close button. */
    children?: React.ReactNode | string;
}
/**
 * Style props for the {@link DialogCloseButton} component. Accepts:
 * * {@link BorderRadiusProps}
 * * {@link DimensionsSetProps}
 * * {@link DisplayProps}
 * * {@link FlexContainerSetProps}
 * * {@link FlexItemSetProps}
 * * {@link PositionSetProps}
 * * {@link SpacingSetProps}
 *
 * @noInheritDoc
 */
export interface DialogCloseButtonStyleProps extends BorderRadiusProps, DimensionsSetProps, DisplayProps, FlexContainerSetProps, FlexItemSetProps, PositionSetProps, SpacingSetProps {
}
/**
 * A button that closes {@link Dialog}. Accessed via `Dialog.CloseButton`.
 */
export declare class DialogCloseButton extends React.Component<DialogCloseButtonProps> {
    /** @hidden */
    static propTypes: {
        onMouseEnter: PropTypes.Requireable<(...args: any[]) => any>;
        onMouseLeave: PropTypes.Requireable<(...args: any[]) => any>;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        hasOnClick: PropTypes.Requireable<boolean>;
        className: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        tabIndex: PropTypes.Requireable<number>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
    };
    /** @hidden */
    static contextTypes: {
        onDialogClose: PropTypes.Requireable<(...args: any[]) => any>;
    };
    /** @hidden */
    constructor(props: DialogCloseButtonProps);
    /** @hidden */
    render(): JSX.Element;
}
declare const _default: React.RefForwardingComponent<DialogCloseButton, DialogCloseButtonProps & DialogCloseButtonStyleProps & React.RefAttributes<DialogCloseButton>>;
export default _default;
//# sourceMappingURL=dialog_close_button.d.ts.map