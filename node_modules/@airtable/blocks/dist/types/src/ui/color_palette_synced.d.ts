/** @module @airtable/blocks/ui: ColorPalette */ /** */
import * as React from 'react';
import { GlobalConfigKey } from '../types/global_config';
import { SharedColorPaletteProps } from './color_palette';
/**
 * Props for the {@link ColorPaletteSynced} component. Also accepts:
 * * {@link ColorPaletteStyleProps}
 *
 * @docsPath UI/components/ColorPaletteSynced
 * @groupPath UI/components/ColorPalette
 */
interface ColorPaletteSyncedProps extends SharedColorPaletteProps {
    /** A string key or array key path in {@link GlobalConfig}. The selected color will always reflect the value stored in {@link GlobalConfig} for this key. Selecting a new color will update {@link GlobalConfig}. */
    globalConfigKey: GlobalConfigKey;
}
/**
 * A wrapper around the {@link ColorPalette} component that syncs with {@link GlobalConfig}.
 *
 * [[ Story id="colorpalette--synced-example" title="Synced color palette example" ]]
 *
 * @component
 * @docsPath UI/components/ColorPaletteSynced
 * @groupPath UI/components/ColorPalette
 */
declare class ColorPaletteSynced extends React.Component<ColorPaletteSyncedProps> {
    /** @hidden */
    static propTypes: {
        onMouseEnter: import("prop-types").Requireable<(...args: any[]) => any>;
        onMouseLeave: import("prop-types").Requireable<(...args: any[]) => any>;
        onClick: import("prop-types").Requireable<(...args: any[]) => any>;
        hasOnClick: import("prop-types").Requireable<boolean>;
        allowedColors: import("prop-types").Validator<(string | null | undefined)[]>;
        onChange: import("prop-types").Requireable<(...args: any[]) => any>;
        squareMargin: import("prop-types").Requireable<number>;
        className: import("prop-types").Requireable<string>;
        style: import("prop-types").Requireable<object>;
        disabled: import("prop-types").Requireable<boolean>;
        globalConfigKey: import("prop-types").Validator<string | string[]>;
    };
    /** @hidden */
    render(): JSX.Element;
}
export default ColorPaletteSynced;
//# sourceMappingURL=color_palette_synced.d.ts.map