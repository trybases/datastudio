declare const theme: {
    textStyles: {
        default: {
            small: {
                fontSize: number;
                lineHeight: string;
                fontWeight: number;
                textColor: string;
                fontFamily: string;
                marginY: number;
            };
            default: {
                fontSize: number;
                lineHeight: string;
                fontWeight: number;
                textColor: string;
                fontFamily: string;
                marginY: number;
            };
            large: {
                fontSize: number;
                lineHeight: string;
                fontWeight: number;
                textColor: string;
                fontFamily: string;
                marginY: number;
            };
            xlarge: {
                fontSize: number;
                lineHeight: string;
                fontWeight: number;
                textColor: string;
                fontFamily: string;
                marginY: number;
            };
        };
        paragraph: {
            small: {
                fontSize: number;
                lineHeight: string;
                fontWeight: number;
                textColor: string;
                fontFamily: string;
                marginTop: number;
                marginBottom: string;
            };
            default: {
                fontSize: number;
                lineHeight: string;
                fontWeight: number;
                textColor: string;
                fontFamily: string;
                marginTop: number;
                marginBottom: string;
            };
            large: {
                fontSize: number;
                lineHeight: string;
                fontWeight: number;
                textColor: string;
                fontFamily: string;
                marginTop: number;
                marginBottom: string;
            };
            xlarge: {
                fontSize: number;
                lineHeight: string;
                fontWeight: number;
                textColor: string;
                fontFamily: string;
                marginTop: number;
                marginBottom: string;
            };
        };
    };
    headingStyles: import("../../../private_utils").ObjectMap<"default" | "caps", {
        small?: (import("../../system").TypographySetProps & import("../../system").MarginProps) | undefined;
        default?: (import("../../system").TypographySetProps & import("../../system").MarginProps) | undefined;
        large?: (import("../../system").TypographySetProps & import("../../system").MarginProps) | undefined;
        xsmall?: (import("../../system").TypographySetProps & import("../../system").MarginProps) | undefined;
        xlarge?: (import("../../system").TypographySetProps & import("../../system").MarginProps) | undefined;
        xxlarge?: (import("../../system").TypographySetProps & import("../../system").MarginProps) | undefined;
    }>;
    buttonVariants: {
        default: string;
        primary: string;
        secondary: string;
        danger: string;
    };
    linkVariants: {
        default: string;
        dark: string;
        light: string;
    };
    inputVariants: {
        default: string;
    };
    selectVariants: {
        default: string;
    };
    selectButtonsVariants: {
        default: {
            containerClassNameForVariant: string;
            optionClassNameForVariant: string;
        };
    };
    switchVariants: {
        default: {
            switchClassName: string;
            switchContainerClassName: string;
            switchLabelClassName: string;
            baseClassName: string;
        };
        danger: {
            switchClassName: string;
            switchContainerClassName: string;
            switchLabelClassName: string;
            baseClassName: string;
        };
    };
    textButtonVariants: {
        default: string;
        dark: string;
        light: string;
    };
    buttonSizes: {
        small: {
            paddingX: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
        default: {
            paddingX: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
        large: {
            paddingX: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
    };
    selectSizes: {
        small: {
            paddingLeft: string;
            paddingRight: string;
            backgroundPosition: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
        default: {
            paddingLeft: string;
            paddingRight: string;
            backgroundPosition: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
        large: {
            paddingLeft: string;
            paddingRight: string;
            backgroundPosition: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
    };
    inputSizes: {
        small: {
            paddingX: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
        default: {
            paddingX: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
        large: {
            paddingX: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
    };
    selectButtonsSizes: {
        small: {
            padding: number;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
        default: {
            padding: number;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
        large: {
            padding: number;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
    };
    switchSizes: {
        small: {
            paddingX: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
        default: {
            paddingX: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
        large: {
            paddingX: string;
            fontSize: number;
            height: string;
            lineHeight: string;
        };
    };
    colors: {
        white: string;
        dark: string;
        light: string;
        lightGray1: string;
        lightGray2: string;
        lightGray3: string;
        lightGray4: string;
        lighten1: string;
        lighten2: string;
        lighten3: string;
        lighten4: string;
        darken1: string;
        darken2: string;
        darken3: string;
        darken4: string;
        blueBright: string;
        blue: string;
        blueDark1: string;
        blueLight1: string;
        blueLight2: string;
        cyanBright: string;
        cyan: string;
        cyanDark1: string;
        cyanLight1: string;
        cyanLight2: string;
        grayBright: string;
        gray: string;
        grayDark1: string;
        grayLight1: string;
        grayLight2: string;
        greenBright: string;
        green: string;
        greenDark1: string;
        greenLight1: string;
        greenLight2: string;
        orangeBright: string;
        orange: string;
        orangeDark1: string;
        orangeLight1: string;
        orangeLight2: string;
        pinkBright: string;
        pink: string;
        pinkDark1: string;
        pinkLight1: string;
        pinkLight2: string;
        purpleBright: string;
        purple: string;
        purpleDark1: string;
        purpleLight1: string;
        purpleLight2: string;
        redBright: string;
        red: string;
        redDark1: string;
        redLight1: string;
        redLight2: string;
        tealBright: string;
        teal: string;
        tealDark1: string;
        tealLight1: string;
        tealLight2: string;
        yellowBright: string;
        yellow: string;
        yellowDark1: string;
        yellowLight1: string;
        yellowLight2: string;
    };
    textColorsByBackgroundColor: import("../../../private_utils").ObjectMap<"blue" | "cyan" | "gray" | "green" | "orange" | "pink" | "purple" | "red" | "teal" | "yellow" | "blueBright" | "blueDark1" | "blueLight1" | "blueLight2" | "cyanBright" | "cyanDark1" | "cyanLight1" | "cyanLight2" | "grayBright" | "grayDark1" | "grayLight1" | "grayLight2" | "greenBright" | "greenDark1" | "greenLight1" | "greenLight2" | "orangeBright" | "orangeDark1" | "orangeLight1" | "orangeLight2" | "pinkBright" | "pinkDark1" | "pinkLight1" | "pinkLight2" | "purpleBright" | "purpleDark1" | "purpleLight1" | "purpleLight2" | "redBright" | "redDark1" | "redLight1" | "redLight2" | "tealBright" | "tealDark1" | "tealLight1" | "tealLight2" | "yellowBright" | "yellowDark1" | "yellowLight1" | "yellowLight2", string>;
    textColors: {
        dark: string;
        default: string;
        light: string;
    };
    breakpoints: {
        xsmallViewport: string;
        smallViewport: string;
        mediumViewport: string;
        largeViewport: string;
    };
    borderWidths: {
        default: string;
        thick: string;
    };
    borders: {
        default: string;
        thick: string;
    };
    fontFamilies: {
        default: string;
        monospace: string;
    };
    fontSizes: string[];
    fontWeights: {
        strong: number;
    };
    opacities: {
        normal: number;
        quiet: number;
        quieter: number;
        quietest: number;
        invisible: number;
    };
    radii: {
        default: number;
        large: number;
        circle: number;
    };
    space: number[];
};
export default theme;
//# sourceMappingURL=index.d.ts.map