/** @module @airtable/blocks/ui: Heading */ /** */
import * as React from 'react';
import { EnumType } from '../private_utils';
import { AllStylesProps } from './system/index';
import { ResponsiveProp } from './system/utils/types';
import { AriaProps } from './types/aria_props';
import { DataAttributesProp } from './types/data_attributes_prop';
/**
 * Sizes for the {@link Heading} component.
 */
declare type HeadingSize = EnumType<typeof HeadingSize>;
declare const HeadingSize: {
    small: "small";
    default: "default";
    large: "large";
    xsmall: "xsmall";
    xlarge: "xlarge";
    xxlarge: "xxlarge";
};
/**
 * Size prop for the {@link Heading} component.
 */
declare type HeadingSizeProp = ResponsiveProp<HeadingSize>;
/**
 * Variant prop for the {@link Heading} component.
 * • **default** - Headings typically used for titles.
 * • **caps** - All-caps headings typically used for field names and smaller section headings.
 */
declare type HeadingVariant = EnumType<typeof HeadingVariant>;
declare const HeadingVariant: {
    default: "default";
    caps: "caps";
};
/**
 * Props for the {@link Heading} component. Also supports:
 * * {@link AllStylesProps}
 * * {@link AriaProps}
 *
 * @docsPath UI/components/Heading
 * @noInheritDoc
 */
interface HeadingProps extends AllStylesProps, AriaProps {
    /** The `role` attribute. */
    role?: string;
    /** The element that is rendered. Defaults to `h3`. */
    as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
    /** The variant of the heading. Defaults to `default`. */
    variant?: HeadingVariant;
    /** The contents of the heading. */
    children?: React.ReactNode | string;
    /** The `id` attribute. */
    id?: string;
    /** The size of the heading. Defaults to `default`. Can be a responsive prop object. */
    size?: HeadingSizeProp;
    /** Data attributes that are spread onto the element, e.g. `dataAttributes={{'data-*': '...'}}`. */
    dataAttributes?: DataAttributesProp;
    /** Additional class names to apply, separated by spaces. */
    className?: string;
    /** Additional styles. */
    style?: React.CSSProperties;
}
declare const ForwardedRefHeading: React.ForwardRefExoticComponent<HeadingProps & React.RefAttributes<HTMLHeadingElement>>;
export default ForwardedRefHeading;
//# sourceMappingURL=heading.d.ts.map