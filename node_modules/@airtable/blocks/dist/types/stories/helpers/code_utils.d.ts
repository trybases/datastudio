/**
 * Helper function to turn an object keyed by prop name into JSX properties.
 *
 * ```
 * valuesAsJsxProps({ size: 'large', disabled: true }) => `size="large" disabled="true"`
 * ```
 *
 * False boolean values are ignored:
 *
 * ```
 * valuesAsJsxProps({ disabled: false }) => ``
 * ```
 *
 * Provide a `mappingConfig` object to map certain keys:
 *
 * ```
 * valuesAsJsxProps(
 *     { icon: true },
 *     {
 *         icon: value => (value ? 'edit' : null)
 *     }
 * ) => `icon="edit"`
 * ```
 */
export declare function createJsxPropsStringFromValuesMap(values: {
    [key: string]: string | boolean | number | null;
}, mappingConfig?: {
    [key: string]: (value: string | boolean | number | null) => string | boolean | null | number;
}): string;
export declare function createJsxComponentString(name: string, props: Array<string>, children?: string | null): string;
export declare const CONTROL_WIDTH = "320px";
//# sourceMappingURL=code_utils.d.ts.map