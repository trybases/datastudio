"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.symbol");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.object.get-own-property-descriptors");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.dialogStylePropTypes = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _emotion = require("emotion");

var React = _interopRequireWildcard(require("react"));

var _baymax_utils = require("./baymax_utils");

var _modal = _interopRequireDefault(require("./modal"));

var _dialog_close_button = _interopRequireDefault(require("./dialog_close_button"));

var _system = require("./system");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var dialogStylePropTypes = _objectSpread({}, _system.dimensionsSetPropTypes, {}, _system.displayPropTypes, {}, _system.flexContainerSetPropTypes, {}, _system.spacingSetPropTypes);
/**
 * Props for the {@link Dialog} component. Also accepts:
 * * {@link DialogStyleProps}
 *
 * @noInheritDoc
 * @docsPath UI/components/Dialog
 */


exports.dialogStylePropTypes = dialogStylePropTypes;

/**
 * A styled modal dialog component.
 *
 * [[ Story id="dialog--example" title="Dialog example" ]]
 *
 * @docsPath UI/components/Dialog
 * @component
 */
// TODO (stephen): focus trapping
var Dialog =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(Dialog, _React$Component);

  /** @hidden */

  /** @hidden */
  // automatically pass onClose to any descendants that are Dialog.CloseButton

  /** @hidden */

  /** @hidden */
  function Dialog(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Dialog);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Dialog).call(this, props));
    _this._onKeyDown = _this._onKeyDown.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  /** @hidden */


  (0, _createClass2.default)(Dialog, [{
    key: "getChildContext",
    value: function getChildContext() {
      return {
        onDialogClose: this.props.onClose
      };
    }
    /** @hidden */

  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      window.addEventListener('keydown', this._onKeyDown, false);
    }
    /** @hidden */

  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.removeEventListener('keydown', this._onKeyDown, false);
    }
    /** @internal */

  }, {
    key: "_onKeyDown",
    value: function _onKeyDown(e) {
      if (e.key === 'Escape') {
        this.props.onClose();
      }
    }
    /** @hidden */

  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          onClose = _this$props.onClose,
          className = _this$props.className,
          style = _this$props.style,
          backgroundClassName = _this$props.backgroundClassName,
          backgroundStyle = _this$props.backgroundStyle,
          children = _this$props.children,
          restOfProps = (0, _objectWithoutProperties2.default)(_this$props, ["onClose", "className", "style", "backgroundClassName", "backgroundStyle", "children"]);
      return React.createElement(_modal.default, (0, _extends2.default)({
        onClose: onClose,
        className: (0, _emotion.cx)((0, _baymax_utils.baymax)('big line-height-4'), className),
        style: style,
        backgroundClassName: backgroundClassName,
        backgroundStyle: backgroundStyle
      }, restOfProps), children);
    }
  }]);
  return Dialog;
}(React.Component);

(0, _defineProperty2.default)(Dialog, "CloseButton", _dialog_close_button.default);
(0, _defineProperty2.default)(Dialog, "propTypes", _objectSpread({
  onClose: _propTypes.default.func.isRequired,
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  backgroundClassName: _propTypes.default.string,
  backgroundStyle: _propTypes.default.object,
  children: _propTypes.default.node.isRequired
}, dialogStylePropTypes));
(0, _defineProperty2.default)(Dialog, "childContextTypes", {
  onDialogClose: _propTypes.default.func
});
var _default = Dialog;
exports.default = _default;