"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.symbol");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.object.get-own-property-descriptors");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _get_sdk = _interopRequireDefault(require("../get_sdk"));

var _table_picker = _interopRequireWildcard(require("./table_picker"));

var _global_config_synced_component_helpers = _interopRequireDefault(require("./global_config_synced_component_helpers"));

var _use_synced = _interopRequireDefault(require("./use_synced"));

var _use_watchable = _interopRequireDefault(require("./use_watchable"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/** @hidden */
function _getTableFromGlobalConfigValue(tableId) {
  return typeof tableId === 'string' ? (0, _get_sdk.default)().base.getTableByIdIfExists(tableId) : null;
}
/**
 * A wrapper around the {@link TablePicker} component that syncs with {@link GlobalConfig}.
 *
 * [[ Story id="modelpickers--tablepickersynced-example" title="Synced table picker example" ]]
 *
 * @docsPath UI/components/TablePickerSynced
 * @groupPath UI/components/TablePicker
 * @component
 */


var TablePickerSynced = (props, ref) => {
  var globalConfigKey = props.globalConfigKey,
      _onChange = props.onChange,
      disabled = props.disabled,
      restOfProps = (0, _objectWithoutProperties2.default)(props, ["globalConfigKey", "onChange", "disabled"]);

  var _useSynced = (0, _use_synced.default)(globalConfigKey),
      _useSynced2 = (0, _slicedToArray2.default)(_useSynced, 3),
      tableId = _useSynced2[0],
      setTableId = _useSynced2[1],
      canSetTableId = _useSynced2[2];

  (0, _use_watchable.default)((0, _get_sdk.default)().base, ['tables']);
  return React.createElement(_table_picker.default, (0, _extends2.default)({}, restOfProps, {
    ref: ref,
    table: _getTableFromGlobalConfigValue(tableId),
    onChange: table => {
      setTableId(table ? table.id : null);

      if (_onChange) {
        _onChange(table);
      }
    },
    disabled: disabled || !canSetTableId
  }));
};

var ForwardedRefTablePickerSynced = React.forwardRef(TablePickerSynced);
ForwardedRefTablePickerSynced.displayName = 'TablePickerSynced';
ForwardedRefTablePickerSynced.propTypes = _objectSpread({
  globalConfigKey: _global_config_synced_component_helpers.default.globalConfigKeyPropType
}, _table_picker.sharedTablePickerPropTypes);
var _default = ForwardedRefTablePickerSynced;
exports.default = _default;