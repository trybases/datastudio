"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.symbol");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.object.get-own-property-descriptors");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.progressBarStylePropTypes = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _emotion = require("emotion");

var React = _interopRequireWildcard(require("react"));

var _core = require("@styled-system/core");

var _colors = _interopRequireDefault(require("../colors"));

var _private_utils = require("../private_utils");

var _baymax_utils = require("./baymax_utils");

var _use_styled_system = _interopRequireDefault(require("./use_styled_system"));

var _system = require("./system");

var _tooltip_anchor_props = require("./types/tooltip_anchor_props");

var _box = _interopRequireDefault(require("./box"));

var _default_theme = _interopRequireDefault(require("./theme/default_theme"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var styleParser = (0, _core.compose)(_system.backgroundColor, _system.maxWidth, _system.minWidth, _system.width, _system.height, _system.flexItemSet, _system.positionSet, _system.margin, _system.display);

var progressBarStylePropTypes = _objectSpread({}, _system.backgroundColorPropTypes, {}, _system.maxWidthPropTypes, {}, _system.minWidthPropTypes, {}, _system.widthPropTypes, {}, _system.heightPropTypes, {}, _system.flexItemSetPropTypes, {}, _system.positionSetPropTypes, {}, _system.marginPropTypes, {}, _system.displayPropTypes);
/**
 * Props for the {@link ProgressBar} component. Also accepts:
 * * {@link ProgressBarStyleProps}
 *
 * @docsPath UI/components/ProgressBar
 * @noInheritDoc
 */


exports.progressBarStylePropTypes = progressBarStylePropTypes;
// TODO (jay): We can't use Box yet, because `aria-valuenow` is not yet available on `AriaProps`.
var progressBarClassName = (0, _emotion.css)({
  position: 'relative',
  borderRadius: _default_theme.default.radii.circle,
  overflow: 'hidden'
});
/**
 * A progress bar.
 *
 * @example
 * ```js
 * import {ProgressBar} from '@airtable/blocks/ui';
 *
 * function MyComponent() {
 *     return (
 *         <ProgressBar
 *             progress={0.6}
 *             barColor='#ff9900'
 *         />
 *     );
 * }
 * ```
 * @docsPath UI/components/ProgressBar
 * @component
 */

var ProgressBar = props => {
  var _props$barColor = props.barColor,
      barColor = _props$barColor === void 0 ? _default_theme.default.colors.blueBright : _props$barColor,
      progress = props.progress,
      onMouseEnter = props.onMouseEnter,
      onMouseLeave = props.onMouseLeave,
      onClick = props.onClick,
      hasOnClick = props.hasOnClick,
      className = props.className,
      style = props.style,
      styleProps = (0, _objectWithoutProperties2.default)(props, ["barColor", "progress", "onMouseEnter", "onMouseLeave", "onClick", "hasOnClick", "className", "style"]);
  var clampedProgressValue = (0, _private_utils.clamp)(progress, 0, 1) * 100;
  var classNameForStyleProps = (0, _use_styled_system.default)(styleProps, styleParser);
  return React.createElement("div", {
    role: "progressbar",
    "aria-valuenow": clampedProgressValue // TODO (stephen): remove tooltip anchor props
    ,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onClick: onClick,
    className: (0, _emotion.cx)(progressBarClassName, classNameForStyleProps, className),
    style: style
  }, React.createElement(_box.default, {
    className: (0, _baymax_utils.baymax)('animate'),
    width: "".concat(clampedProgressValue, "%"),
    height: "100%",
    backgroundColor: barColor
  }));
};

ProgressBar.propTypes = _objectSpread({
  progress: _propTypes.default.number.isRequired,
  barColor: _propTypes.default.string,
  className: _propTypes.default.string,
  style: _propTypes.default.object
}, _tooltip_anchor_props.tooltipAnchorPropTypes, {}, progressBarStylePropTypes);
ProgressBar.defaultProps = {
  barColor: _colors.default.BLUE_BRIGHT,
  backgroundColor: _colors.default.GRAY_LIGHT_1,
  width: '100%',
  height: 4
};
var _default = ProgressBar;
exports.default = _default;