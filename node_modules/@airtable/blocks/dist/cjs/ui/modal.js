"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.symbol");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.object.get-own-property-descriptors");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Modal = exports.modalStylePropTypes = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _emotion = require("emotion");

var React = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _core = require("@styled-system/core");

var _error_utils = require("../error_utils");

var _baymax_utils = require("./baymax_utils");

var _with_styled_system = _interopRequireDefault(require("./with_styled_system"));

var _system = require("./system");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var styleParser = (0, _core.compose)(_system.dimensionsSet, _system.display, _system.flexContainerSet, _system.spacingSet);

var modalStylePropTypes = _objectSpread({}, _system.dimensionsSetPropTypes, {}, _system.displayPropTypes, {}, _system.flexContainerSetPropTypes, {}, _system.spacingSetPropTypes);
/**
 * Generic modal component with minimal styling.
 *
 * @hidden
 */
// TODO (stephen): refactor so Modal only includes the background element and renders the dialog via children


exports.modalStylePropTypes = modalStylePropTypes;

var Modal =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(Modal, _React$Component);

  /** @hidden */

  /** @internal */

  /** @internal */

  /** @internal */

  /** @internal */

  /** @hidden */
  function Modal(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Modal);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Modal).call(this, props));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_background", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_container", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_originalActiveElement", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_mouseDownOutsideModal", void 0);
    _this._background = null;
    _this._container = document.createElement('div');
    _this._originalActiveElement = null;
    _this._mouseDownOutsideModal = false;
    _this._onMouseDown = _this._onMouseDown.bind((0, _assertThisInitialized2.default)(_this));
    _this._onMouseUp = _this._onMouseUp.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  /** @hidden */


  (0, _createClass2.default)(Modal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var container = this._container;
      container.setAttribute('tabIndex', '0');
      container.style.zIndex = '99999'; // If we don't set `position: fixed`, the outline and box-shadow
      // of elements that are in theory underneath this element will cover
      // up the modal.

      container.style.position = 'fixed';
      (0, _error_utils.invariant)(document.body, 'no document body');
      document.body.appendChild(container); // If the frame is focused, move focus to the modal's container.
      // Next time the user presses tab, it will focus the first focusable element in the modal.
      // We only do this if the document is focused to avoid the frame becoming
      // programmatically focused if a modal is displayed without user interaction.

      if (document.hasFocus()) {
        this._originalActiveElement = document.activeElement;
        container.focus();
      }
    }
    /** @hidden */

  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _error_utils.invariant)(document.body, 'no document body');
      document.body.removeChild(this._container);

      if (this._originalActiveElement !== null) {
        this._originalActiveElement.focus();
      }
    }
    /** @internal */

  }, {
    key: "_onMouseDown",
    value: function _onMouseDown(e) {
      if (this._shouldClickingOnElementCloseModal(e.target)) {
        this._mouseDownOutsideModal = true;
      }
    }
    /** @internal */

  }, {
    key: "_onMouseUp",
    value: function _onMouseUp(e) {
      if (this._mouseDownOutsideModal && this.props.onClose && this._shouldClickingOnElementCloseModal(e.target)) {
        this.props.onClose();
      }

      this._mouseDownOutsideModal = false;
    }
    /** @internal */

  }, {
    key: "_shouldClickingOnElementCloseModal",
    value: function _shouldClickingOnElementCloseModal(el) {
      return el === this._background;
    }
    /** @hidden */

  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          style = _this$props.style,
          backgroundClassName = _this$props.backgroundClassName,
          backgroundStyle = _this$props.backgroundStyle,
          children = _this$props.children;
      return _reactDom.default.createPortal(React.createElement("div", {
        ref: el => this._background = el,
        className: (0, _emotion.cx)((0, _baymax_utils.baymax)('fixed all-0 darken3 flex items-center justify-center'), backgroundClassName),
        style: backgroundStyle,
        onMouseDown: this._onMouseDown,
        onMouseUp: this._onMouseUp
      }, React.createElement("div", {
        className: (0, _emotion.cx)((0, _baymax_utils.baymax)('relative overflow-auto light-scrollbar white stroked1 rounded-big animate-bounce-in'), className),
        style: style
      }, children)), this._container);
    }
  }]);
  return Modal;
}(React.Component);

exports.Modal = Modal;
(0, _defineProperty2.default)(Modal, "propTypes", {
  onClose: _propTypes.default.func,
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  backgroundClassName: _propTypes.default.string,
  backgroundStyle: _propTypes.default.object
});

var _default = (0, _with_styled_system.default)(Modal, styleParser, modalStylePropTypes, // TODO (stephen): move these to Dialog
{
  display: 'block',
  width: '100%',
  maxWidth: '100vw',
  maxHeight: '100vh',
  margin: 3,
  padding: 3
});

exports.default = _default;