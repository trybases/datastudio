"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.symbol");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.object.get-own-property-descriptors");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var tokens = _interopRequireWildcard(require("./tokens"));

var controlSizes = _interopRequireWildcard(require("./control_sizes"));

var _text_styles = _interopRequireDefault(require("./text_styles"));

var _heading_styles = _interopRequireDefault(require("./heading_styles"));

var _button_variants = _interopRequireDefault(require("./button_variants"));

var _link_variants = _interopRequireDefault(require("./link_variants"));

var _input_variants = _interopRequireDefault(require("./input_variants"));

var _switch_variants = _interopRequireDefault(require("./switch_variants"));

var _select_variants = _interopRequireDefault(require("./select_variants"));

var _select_buttons_variants = _interopRequireDefault(require("./select_buttons_variants"));

var _text_button_variants = _interopRequireDefault(require("./text_button_variants"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var theme = _objectSpread({}, tokens, {}, controlSizes, {
  textStyles: _text_styles.default,
  headingStyles: _heading_styles.default,
  // We create CSS class names for variants when the UI kit gets loaded.
  // This means `textButtonVariants.default` is just a CSS class name.
  // This has the benefit over exporting a style object
  // of not having to create a class name manually in the render function.
  buttonVariants: _button_variants.default,
  linkVariants: _link_variants.default,
  inputVariants: _input_variants.default,
  selectVariants: _select_variants.default,
  selectButtonsVariants: _select_buttons_variants.default,
  switchVariants: _switch_variants.default,
  textButtonVariants: _text_button_variants.default
});

var _default = theme;
exports.default = _default;