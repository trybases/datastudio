"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.symbol");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.object.get-own-property-descriptors");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _emotion = require("emotion");

var _use_styled_system = _interopRequireDefault(require("./use_styled_system"));

var _index = require("./system/index");

var _aria_props = require("./types/aria_props");

var _text = require("./text");

var _data_attributes_prop = require("./types/data_attributes_prop");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * A label component.
 *
 * [[ Story id="label--example" title="Label example" ]]
 *
 * @docsPath UI/components/Label
 * @component
 */
var Label = (props, ref) => {
  var _props$size = props.size,
      size = _props$size === void 0 ? _text.TextSize.default : _props$size,
      htmlFor = props.htmlFor,
      id = props.id,
      children = props.children,
      className = props.className,
      style = props.style,
      dataAttributes = props.dataAttributes,
      role = props.role,
      ariaLabel = props['aria-label'],
      ariaLabelledBy = props['aria-labelledby'],
      ariaDescribedBy = props['aria-describedby'],
      ariaControls = props['aria-controls'],
      ariaExpanded = props['aria-expanded'],
      ariaHasPopup = props['aria-haspopup'],
      ariaHidden = props['aria-hidden'],
      ariaLive = props['aria-live'],
      styleProps = (0, _objectWithoutProperties2.default)(props, ["size", "htmlFor", "id", "children", "className", "style", "dataAttributes", "role", "aria-label", "aria-labelledby", "aria-describedby", "aria-controls", "aria-expanded", "aria-haspopup", "aria-hidden", "aria-live"]);
  var classNameForTextStyle = (0, _text.useTextStyle)(size);
  var classNameForStyleProps = (0, _use_styled_system.default)(_objectSpread({
    display: 'inline-block',
    textColor: 'light',
    fontWeight: 'strong',
    marginBottom: '6px'
  }, styleProps));
  return React.createElement("label", (0, _extends2.default)({
    ref: ref,
    htmlFor: htmlFor,
    id: id,
    className: (0, _emotion.cx)(classNameForTextStyle, classNameForStyleProps, className),
    style: style,
    role: role,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-describedby": ariaDescribedBy,
    "aria-controls": ariaControls,
    "aria-expanded": ariaExpanded,
    "aria-haspopup": ariaHasPopup,
    "aria-hidden": ariaHidden,
    "aria-live": ariaLive
  }, dataAttributes), children);
};

var ForwardedRefLabel = React.forwardRef(Label);
ForwardedRefLabel.propTypes = _objectSpread({
  size: _text.textSizePropType,
  htmlFor: _propTypes.default.string,
  id: _propTypes.default.string,
  dataAttributes: _data_attributes_prop.dataAttributesPropType,
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  style: _propTypes.default.object
}, _index.allStylesPropTypes, {}, _aria_props.ariaPropTypes);
ForwardedRefLabel.displayName = 'Label';
var _default = ForwardedRefLabel;
exports.default = _default;