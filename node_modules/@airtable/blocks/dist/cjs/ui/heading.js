"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.get-own-property-descriptors");

require("core-js/modules/es.object.to-string");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _emotion = require("emotion");

var _error_utils = require("../error_utils");

var _private_utils = require("../private_utils");

var _use_styled_system = _interopRequireDefault(require("./use_styled_system"));

var _index = require("./system/index");

var _get_style_props_for_responsive_prop = _interopRequireDefault(require("./system/utils/get_style_props_for_responsive_prop"));

var _use_theme = _interopRequireDefault(require("./theme/use_theme"));

var _aria_props = require("./types/aria_props");

var _data_attributes_prop = require("./types/data_attributes_prop");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var HeadingSize = (0, _private_utils.createEnum)('xsmall', 'small', 'default', 'large', 'xlarge', 'xxlarge');
/**
 * Size prop for the {@link Heading} component.
 */

var headingSizePropType = (0, _private_utils.createResponsivePropTypeFromEnum)(HeadingSize);
/**
 * Variant prop for the {@link Heading} component.
 * • **default** - Headings typically used for titles.
 * • **caps** - All-caps headings typically used for field names and smaller section headings.
 */

var HeadingVariant = (0, _private_utils.createEnum)('default', 'caps');
var headingVariantPropType = (0, _private_utils.createPropTypeFromEnum)(HeadingVariant);
/** @internal */

function warnIfHeadingSizeOutOfRangeForVariant(size, variant, headingSizesForVariant) {
  if (process.env.NODE_ENV === 'development' && !(0, _private_utils.has)(headingSizesForVariant, size)) {
    // eslint-disable-next-line
    console.warn("[@airtable/blocks/ui] warning: <Heading variant='".concat(variant, "' /> only supports the following values for the size prop: ").concat(Object.keys(headingSizesForVariant).join(', '), ". The component will fall back to the default size."));
  }
}
/** @internal */


function useHeadingStyle(headingSizeProp, variant) {
  var _useTheme = (0, _use_theme.default)(),
      headingStyles = _useTheme.headingStyles;

  var headingSizesForVariant = headingStyles[variant];
  var styleProps;

  if (typeof headingSizeProp === 'string') {
    warnIfHeadingSizeOutOfRangeForVariant(headingSizeProp, variant, headingSizesForVariant);
    styleProps = headingSizesForVariant[headingSizeProp] || headingSizesForVariant[HeadingSize.default];
  } else {
    var responsiveSizePropObject = {};
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = (0, _private_utils.keys)(headingSizeProp)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var sizeKey = _step.value;
        var sizeProp = headingSizeProp[sizeKey];
        (0, _error_utils.invariant)(sizeProp, 'sizeProp');
        warnIfHeadingSizeOutOfRangeForVariant(sizeProp, variant, headingSizesForVariant);
        responsiveSizePropObject[sizeKey] = sizeProp || HeadingSize.default;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    styleProps = (0, _get_style_props_for_responsive_prop.default)(responsiveSizePropObject, // Cast to any to because `caps` don't all have the same sizes as `default`.
    // This in turn requires each size to be typed as optional.
    headingSizesForVariant);
  }

  return (0, _use_styled_system.default)(styleProps);
}
/**
 * Props for the {@link Heading} component. Also supports:
 * * {@link AllStylesProps}
 * * {@link AriaProps}
 *
 * @docsPath UI/components/Heading
 * @noInheritDoc
 */


/**
 * A heading component with sizes and variants.
 *
 * [[ Story id="heading--example" title="Heading example" ]]
 *
 * @docsPath UI/components/Heading
 * @component
 */
var Heading = (props, ref) => {
  var _props$as = props.as,
      Component = _props$as === void 0 ? 'h3' : _props$as,
      _props$size = props.size,
      size = _props$size === void 0 ? HeadingSize.default : _props$size,
      _props$variant = props.variant,
      variant = _props$variant === void 0 ? HeadingVariant.default : _props$variant,
      children = props.children,
      id = props.id,
      role = props.role,
      dataAttributes = props.dataAttributes,
      className = props.className,
      style = props.style,
      ariaLabel = props['aria-label'],
      ariaLabelledBy = props['aria-labelledby'],
      ariaDescribedBy = props['aria-describedby'],
      ariaControls = props['aria-controls'],
      ariaExpanded = props['aria-expanded'],
      ariaHasPopup = props['aria-haspopup'],
      ariaHidden = props['aria-hidden'],
      ariaLive = props['aria-live'],
      styleProps = (0, _objectWithoutProperties2.default)(props, ["as", "size", "variant", "children", "id", "role", "dataAttributes", "className", "style", "aria-label", "aria-labelledby", "aria-describedby", "aria-controls", "aria-expanded", "aria-haspopup", "aria-hidden", "aria-live"]);
  var classNameForHeadingSize = useHeadingStyle(size, variant);
  var classNameForStyleProps = (0, _use_styled_system.default)(_objectSpread({
    fontFamily: 'default',
    textColor: 'default'
  }, styleProps));
  return React.createElement(Component, (0, _extends2.default)({
    ref: ref,
    id: id,
    className: (0, _emotion.cx)(classNameForHeadingSize, classNameForStyleProps, className),
    style: style,
    role: role,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-describedby": ariaDescribedBy,
    "aria-controls": ariaControls,
    "aria-expanded": ariaExpanded,
    "aria-haspopup": ariaHasPopup,
    "aria-hidden": ariaHidden,
    "aria-live": ariaLive
  }, dataAttributes), children);
};

var ForwardedRefHeading = React.forwardRef(Heading);
ForwardedRefHeading.propTypes = _objectSpread({
  as: _propTypes.default.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),
  size: headingSizePropType,
  variant: headingVariantPropType,
  children: _propTypes.default.node,
  id: _propTypes.default.string,
  role: _propTypes.default.string,
  dataAttributes: _data_attributes_prop.dataAttributesPropType,
  className: _propTypes.default.string,
  style: _propTypes.default.object
}, _index.allStylesPropTypes, {}, _aria_props.ariaPropTypes);
ForwardedRefHeading.displayName = 'Heading';
var _default = ForwardedRefHeading;
exports.default = _default;